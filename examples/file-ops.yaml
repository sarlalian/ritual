name: File Operations Workflow
description: Demonstrates file creation, templating, and archiving
version: "1.0"

vars:
  project_name: "MyProject"
  version: "1.0.0"
  temp_dir: "/tmp/ritual-demo"

tasks:
  - id: create_directory
    name: Create Temp Directory
    type: file
    path: "{{ .vars.temp_dir }}"
    state: directory

  - id: create_config
    name: Generate Config File
    type: file
    path: "{{ .vars.temp_dir }}/config.json"
    state: file
    content: |
      {
        "name": "{{ .vars.project_name }}",
        "version": "{{ .vars.version }}",
        "created": "{{ now | date \"2006-01-02 15:04:05\" }}"
      }
    depends_on: [create_directory]

  - id: create_readme
    name: Generate README
    type: file
    path: "{{ .vars.temp_dir }}/README.md"
    state: file
    content: |
      # {{ .vars.project_name }}

      Version: {{ .vars.version }}
      Generated: {{ now | date \"2006-01-02\" }}

      This is an example project generated by Ritual.
    depends_on: [create_directory]

  - id: archive_project
    name: Create Project Archive
    type: compress
    path: "{{ .vars.temp_dir }}.tar.gz"
    state: create
    format: tar.gz
    sources:
      - "{{ .vars.temp_dir }}"
    depends_on: [create_config, create_readme]

  - id: cleanup
    name: Clean Up Temp Directory
    type: file
    path: "{{ .vars.temp_dir }}"
    state: absent
    depends_on: [archive_project]
